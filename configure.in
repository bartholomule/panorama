dnl Process this file with autoconf to produce a configure script.

AC_INIT(llapi/base_class.h)

AC_PREFIX_DEFAULT(/opt/panorama)

dnl ---------------------------------------------------------------------------
dnl Gets the host type
dnl ---------------------------------------------------------------------------
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl ---------------------------------------------------------------------------
dnl Checks for programs.
dnl ---------------------------------------------------------------------------
AC_PROG_CXX
AC_LANG(C++)
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_MAKE_SET

dnl ---------------------------------------------------------------------------
dnl Checks for dlopen function
dnl ---------------------------------------------------------------------------
AC_CHECK_LIB(dl, dlopen)

dnl ---------------------------------------------------------------------------
dnl Checks for header files.
dnl ---------------------------------------------------------------------------
AC_HEADER_STDC

dnl ---------------------------------------------------------------------------
dnl Check for math features
dnl ---------------------------------------------------------------------------

AC_CACHE_CHECK([for working cbrt],
  ac_cv_cbrt_ok,
  [AC_TRY_LINK([
    #include <cmath>
    #undef cbrt
    ],
    [
      double (*cr)(double);
  
      double d = 8;
      cr = &std::cbrt;
      double c = cr(d);
    ], 
    ac_cv_cbrt_ok=yes,
    ac_cv_cbrt_ok=no)
  ]
)
if test $ac_cv_cbrt_ok = yes; then
  AC_DEFINE(MATH_USE_CBRT)
fi

AC_CACHE_CHECK([for working hypot],
  ac_cv_hypot_ok,
  [AC_TRY_LINK(
    [
      #include <cmath>
      #undef hypot
    ],
    [
      double x = 8;
      double y = 2
      double (*h)(double,double) = &std::hypot;
      double z = h(x,y);
    ], 
    ac_cv_hypot_ok=yes,
    ac_cv_hypot_ok=no)
  ]
)
if test $ac_cv_hypot_ok = yes; then
  AC_DEFINE(MATH_USE_HYPOT)
fi  

AC_CACHE_CHECK([for working arc hyperbolic trig functions],
  ac_cv_arc_hyperbolic_ok,
[AC_TRY_LINK([
  #include <cmath>
  #undef asinh
  #undef acosh
  #undef atanh
  ],
  [
    
    double (*f)(double);

    double d = 10;

    f = &std::asinh;
    double d1 = f(d); 
    f = &std::acosh;
    double d2 = f(d);
    f = &std::atanh;
    double d3 = f(d); // NAN -- too large, but proves it exists
  ], 
  ac_cv_arc_hyperbolic_ok=yes,
  ac_cv_arc_hyperbolic_ok=no)
])
if test $ac_cv_arc_hyperbolic_ok = yes; then
  AC_DEFINE(MATH_USE_ARC_HYP_TRIG)
fi

AC_CACHE_CHECK([for working inf tests],
  ac_cv_inf_tests_ok,
[AC_TRY_LINK([
  #include <cmath>
  ],
  [
    double x = 100;
    int inf1 = isinf(x);
    int inf2 = isnan(x);
    int inf3 = finite(x);
  ], 
  ac_cv_inf_tests_ok=yes,
  ac_cv_inf_tests_ok=no)
])
if test $ac_cv_inf_tests_ok = yes; then

  AC_CACHE_CHECK([for available throw() on inf tests (C++)],
  ac_cv_inf_tests_throw,
    [AC_TRY_LINK([
      #include <cmath>
      #undef isinf
      #undef finite
      #undef isnan
    ],
    [
      int (*fn3)(double) throw();
      double d = 100;

      fn3 = &isinf;
      int i1 = fn3(d);

      fn3 = &finite;
      int i2 = fn3(d);

      fn3 = &isnan;
      int i3 = fn3(d);
    ], 
    ac_cv_inf_tests_throw=yes,
    ac_cv_inf_tests_throw=no)
  ])
  if test $ac_cv_inf_tests_throw = yes; then
    AC_DEFINE(MATH_USE_INF_TESTS)
    AC_DEFINE(INF_TEST_REQUIERS_THROW)
  else

    AC_CACHE_CHECK([for addressable inf tests], ac_cv_inf_tests_addressable,
      [AC_TRY_LINK([
        #include <cmath>
        #undef isinf
        #undef finite
        #undef isnan
      ],
      [
        int (*fn3)(double);
        double d = 100;
 
        fn3 = &isinf;
        int i1 = fn3(d);

        fn3 = &finite;
        int i2 = fn3(d);

        fn3 = &isnan;
        int i3 = fn3(d);
      ], 
      ac_cv_inf_tests_addressable=yes,
      ac_cv_inf_tests_addressable=no)
    ])
    if test $ac_cv_inf_tests_addressable = yes; then
      AC_DEFINE(MATH_USE_INF_TESTS)
    fi
  fi
fi

dnl ---------------------------------------------------------------------------
dnl Check for C++ features
dnl ---------------------------------------------------------------------------
AC_CACHE_CHECK([for working member templates (C++)],
  ac_cv_member_templates_ok,
[AC_TRY_COMPILE([
  class foo
  { 
  public:
    template <class T>
    bool callme(T t) { return true; }
  };
  ],
  [
    foo f;
    f.callme(int(1));
    f.callme(bool(true));
    f.callme(double(1.0));
  ], 
  ac_cv_member_templates_ok=yes,
  ac_cv_member_templates_ok=no)
])
if test $ac_cv_member_templates_ok = yes; then
  AC_DEFINE(MEMBER_TEMPLATES_WORK)
fi

AC_CACHE_CHECK([for working subtype ptr returns for virtual functions (C++)],
  ac_cv_virtual_return_type_ok,
[AC_TRY_COMPILE([
  class foo
  {
  public:
    virtual foo* This();
  };

  class bar : public foo
  {
  public:
    virtual bar* This();
  };

  foo* foo::This() { return this; }
  bar* bar::This() { return this; }
  ],
  [
    foo f, *bp1, *bp2, *p3, *p4;
    bar b;

    bp1 = &f;
    bp2 = &b;

    p3 = bp1->This();
    p4 = bp2->This();
  ],
  ac_cv_virtual_return_type_ok=yes,
  ac_cv_virtual_return_type_ok=no)
])
if test $ac_cv_virtual_return_type_ok = no; then
  AC_DEFINE(BROKEN_RETURN_SUBTYPES_ON_VIRTUAL)
fi  

dnl ---------------------------------------------------------------------------
dnl Check for special libraries
dnl ---------------------------------------------------------------------------

dnl ---------------
dnl SigC++
dnl ---------------
echo -e "checking for SigC++... \c"
dnl AC_CHECK_PROG(sigcxx_val,"sigc-config --cflags","yes","no")
if [ `sigc-config --cflags >/dev/null 2>/dev/null` ]
then
  echo "yes"
  AC_DEFINE(USE_SIGCXX)
  BARF1=`sigc-config --cflags`
  BARF2=`sigc-config --libs`
  extra_includes="$extra_includes $BARF1"
  extra_libs="$extra_libs $BARF2"
else
  echo "no"
  AC_DEFINE(USE_SIGCXX,0)
fi
AC_SUBST(extra_includes)
AC_SUBST(extra_libs)

dnl ---------------
dnl GTK--
dnl ---------------
echo -e "checking for GTK--... \c"
dnl AC_CHECK_PROG(gtkmm_val,"gtkmm-config --cflags","yes","no")
if [ `gtkmm-config --cflags >/dev/null 2>/dev/null` ]
then
  GUI_PROGRAM="gui"
  echo "yes"
else
  GUI_PROGRAM=""
  echo "no"
  AC_MSG_WARN(GTK-- not available so gui (panorama) not compiled)
fi
AC_SUBST(GUI_PROGRAM)

dnl ---------------
dnl freetype
dnl ---------------
text_val=no
echo -e "checking for modern freetype... \c"
if [ `freetype-config --cflags >/dev/null 2>/dev/null` ]
then
  TEXT_FILTER="text"
  PLUGIN_TEXT="if_text.plg"
  echo "yes"
else
  echo "no"

  dnl This is the original test, which I am leaving in here for backwards 
  dnl compatibility (if it still works).

  AC_CHECK_HEADER(freetype/freetype.h, [AC_CHECK_LIB(ttf,main,text_val=yes)])
  if test $text_val = "yes"
  then
    TEXT_FILTER="text"
    PLUGIN_TEXT="if_text.plg"
  else
    TEXT_FILTER=""
    PLUGIN_TEXT=""
    AC_MSG_WARN(Freetype library not available so text filter not compiled)
  fi
fi
AC_SUBST(TEXT_FILTER)
AC_SUBST(PLUGIN_TEXT)

dnl ---------------
dnl libjpeg
dnl ---------------
jpeg_val=no
AC_CHECK_HEADER(jpeglib.h, [AC_CHECK_LIB(jpeg,main,jpeg_val=yes)])
if test $jpeg_val = "yes"; then
	JPEG_FILTER="jpeg"
	PLUGIN_JPEG="jpeg_io.plg"
else
	JPEG_FILTER=""
	PLUGIN_JPEG=""
	AC_MSG_WARN(JPEG library not available so jpeg filter not compiled)
fi
AC_SUBST(JPEG_FILTER)
AC_SUBST(PLUGIN_JPEG)

dnl ---------------
dnl libpng
dnl ---------------
png_val=no
AC_CHECK_HEADER(png.h, [AC_CHECK_LIB(png,main,dnl
AC_CHECK_LIB(z,main,png_val=yes))])
if test $png_val = "yes"; then
	PNG_FILTER="png"
	PLUGIN_PNG="png_io.plg"
else
	PNG_FILTER=""
	PLUGIN_PNG=""
	AC_MSG_WARN(Either png or zlib library not available so png filter not compiled)
fi
AC_SUBST(PNG_FILTER)
AC_SUBST(PLUGIN_PNG)

dnl ---------------
dnl libungif
dnl ---------------
gif_val=no
AC_CHECK_HEADER(gif_lib.h, [AC_CHECK_LIB(ungif,main,gif_val=yes)])
if test $gif_val = "yes"; then
	GIF_FILTER="gif"
	PLUGIN_GIF="gif_io.plg"
else
	GIF_FILTER=""
	PLUGIN_GIF=""
	AC_MSG_WARN(UNGIF library not available so gif filter not compiled)
fi
AC_SUBST(GIF_FILTER)
AC_SUBST(PLUGIN_GIF)

dnl ---------------
dnl libtiff
dnl ---------------
tiff_val=no
AC_CHECK_HEADER(tiffio.h, [AC_CHECK_LIB(tiff,TIFFGetVersion,tiff_val=yes)])
if test $tiff_val = "yes"; then
	TIFF_FILTER="tiff"
	PLUGIN_TIFF="tiff_io.plg"
else
	TIFF_FILTER=""
	PLUGIN_TIFF=""
	AC_MSG_WARN(LIBTIFF library not available so tiff filter not compiled)
fi
AC_SUBST(TIFF_FILTER)
AC_SUBST(PLUGIN_TIFF)

dnl ---------------------------------------------------------------------------
dnl Checks for typedefs, structures, and compiler characteristics.
dnl ---------------------------------------------------------------------------
AC_C_CONST
AC_C_BIGENDIAN
AC_TYPE_SIZE_T
dnl 
dnl Under Irix 6.5, g++ does not define fileno when stdio.h is included 
dnl by a lex generated file.
dnl
AC_CACHE_CHECK([for fileno being properly defined with C++],
  ac_cv_fileno_ok, 
[AC_TRY_COMPILE([#include <stdio.h>
], [int s = fileno(STDOUT)], ac_cv_fileno_ok=yes, ac_cv_fileno_ok=no)])
if test $ac_cv_fileno_ok = no; then
  AC_DEFINE(BROKEN_FILENO_INCLUDE)
fi

AC_MSG_CHECKING(for a forced cpu type)
AC_ARG_ENABLE(cpu, 
[  --enable-cpu=CPUTYPE    Force the use of the given cpu type in compilation.]
[                          This is for using a specific CPU within a family.  ]
[                          --enable-cpu=pentium4  or  --enable-cpu=athlon-xp  ]
[                          are both within the i686 family group, but perform ]
[                          very differently.                                  ]
[                                                                             ]
[                          Alternatively, you can use the --target= option to ]
[                          specify a family, but not a specific CPU.          ]
[                                                                             ]
[                          gcc supports some of the following (check yours):  ]
[                              i386, i486, i586, i686, pentium, pentiumpro,   ]
[                              pentium-mmx, pentium2, pentium3, pentium4,     ]
[                              k6, k6-2, k6-3, athlon, athlon-tbird,          ]
[                              athlon-xp, athlon-mp                           ],
CPU_TYPE=$enableval, CPU_TYPE="no")
if test $CPU_TYPE = "yes"; then
  CPU_TYPE=$target_cpu
  CPU_MESSAGE="yes, but not specified, guessing $CPU_TYPE"
  CPU_OVERRIDE=1
elif test $CPU_TYPE = "guess"; then
  CPU_TYPE=$target_cpu
  CPU_MESSAGE="no, guessing $CPU_TYPE"
  CPU_OVERRIDE=1
elif test $CPU_TYPE = "no"; then
  CPU_OVERRIDE=0
  CPU_MESSAGE="no"
else
  CPU_MESSAGE="yes, $CPU_TYPE"
  CPU_OVERRIDE=1
fi
AC_SUBST(CPU_TYPE)
AC_MSG_RESULT($CPU_MESSAGE)

if test $CPU_OVERRIDE != 0
then 
  AC_MSG_CHECKING(which compiler flag specifies CPU type)
  OLD_CXXFLAGS=$CXXFLAGS
  CXXFLAGS="$OLD_CXXFLAGS -march=$CPU_TYPE"
  AC_TRY_LINK( [ int iii; ], [ iii = 0; ], CPU_SPECIFIC_SWITCH="-march", CPU_SPECIFIC_SWITCH="no")
  if test "no" = $CPU_SPECIFIC_SWITCH; then
    CXXFLAGS="$OLD_CXXFLAGS -mcpu=$CPU_TYPE"
    AC_TRY_LINK( [ int iii; ], [ iii = 0;], CPU_SPECIFIC_SWITCH="-mcpu", CPU_SPECIFIC_SWITCH="no")
  fi
  dnl I don't have anything else to try right now.  Someone else can add something.
  if test "no" = $CPU_SPECIFIC_SWITCH; then
    AC_MSG_RESULT(
[NOT FOUND]
[                   Your CPU type override ($CPU_TYPE) may be invalid         ]
[                   for your compiler (CHECK THIS FIRST), or I don't know how ]
[                   to override it on your compiler (send a patch)... Ignoring]
[                   forced CPU override. ])
    CPU_SPECIFIC_FLAG=""
  else
    AC_MSG_RESULT($CPU_SPECIFIC_SWITCH)
    CPU_SPECIFIC_FLAG="$CPU_SPECIFIC_SWITCH=$CPU_TYPE"
  fi
  CXXFLAGS=$OLD_CXXFLAGS
else
  CPU_SPECIFIC_FLAG=""
fi
AC_SUBST(CPU_SPECIFIC_FLAG)





dnl ---------------------------------------------------------------------------
dnl Checks for optimizations option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable optimizations or not)
AC_ARG_ENABLE(optimizations,
[  --enable-optimizations  Enable optimizations (=level given)],
OPTIMIZATION_VAL=$enableval, OPTIMIZATION_VAL="no")
if test $OPTIMIZATION_VAL = "yes"; then
  OPTIMIZATIONS_ALLOWED=1
  OPTIMIZATION_LEVEL=""
  OPTIMIZE_EXPENSIVE=0
  OPTIMIZATION_VAL="yes"
elif test $OPTIMIZATION_VAL != "no"; then
  OPTIMIZATIONS_ALLOWED=0
  OPTIMIZE_EXPENSIVE=0
  OPTIMIZATION_LEVEL=""
  dnl For some reason, this didn't work correctly with a simple case:
  dnl [0-9]) ...

  case $OPTIMIZATION_VAL in
    1) OPTIMIZATIONS_ALLOWED=1 ;;
    2) OPTIMIZATIONS_ALLOWED=1 ;;
    3) OPTIMIZATIONS_ALLOWED=1 ;;
    4) OPTIMIZATIONS_ALLOWED=1 ;;
    5) OPTIMIZATIONS_ALLOWED=1 ;; 
    6) OPTIMIZATIONS_ALLOWED=1 ;; 
    7) OPTIMIZATIONS_ALLOWED=1 ;; 
    8) OPTIMIZATIONS_ALLOWED=1 ;; 
    9) OPTIMIZATIONS_ALLOWED=1 ;; 
    0) OPTIMIZATIONS_ALLOWED=1 ;;
    *) OPTIMIZATION_VAL="NO -- unknown value \"$OPTIMIZATION_VAL\"" ;;
  esac
  if test $OPTIMIZATIONS_ALLOWED != 0
  then
    OPTIMIZATION_LEVEL=$OPTIMIZATION_VAL
    OPTIMIZATION_VAL="yes, level $OPTIMIZATION_LEVEL"
    if test $OPTIMIZATION_LEVEL -ge 5
    then
      OPTIMIZE_EXPENSIVE=1
    fi
  fi
else
  OPTIMIZATIONS_ALLOWED=0
  OPTIMIZATION_VAL="no"
  OPTIMIZE_EXPENSIVE=0
fi
AC_SUBST(OPTIMIZATIONS_ALLOWED)
AC_SUBST(OPTIMIZATION_LEVEL)
AC_SUBST(OPTIMIZE_EXPENSIVE)
AC_MSG_RESULT($OPTIMIZATION_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for exceptions option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable exceptions or not)
AC_ARG_ENABLE(exceptions,
[  --enable-exceptions     Enable exception handling],
EXCEPTION_VAL=$enableval, EXCEPTION_VAL="no")
if test $EXCEPTION_VAL = "yes"; then
  EXCEPTIONS_ALLOWED=1
  AC_DEFINE(USE_EXCEPTIONS,1)
else
  EXCEPTIONS_ALLOWED=0
  EXCEPTION_VAL="no"
fi
AC_SUBST(EXCEPTIONS_ALLOWED)
AC_MSG_RESULT($EXCEPTION_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for rtti option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable rtti or not)
AC_ARG_ENABLE(rtti,
[  --enable-rtti           Enable runtime type identification],
RTTI_VAL=$enableval, RTTI_VAL="no")
if test $RTTI_VAL = "yes"; then
  RTTI_ALLOWED=1
else
  RTTI_ALLOWED=0
  RTTI_VAL="no"
fi
AC_SUBST(RTTI_ALLOWED)
AC_MSG_RESULT($RTTI_VAL)


dnl ---------------------------------------------------------------------------
dnl Checks for static-link option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to link statically or not)
AC_ARG_ENABLE(static-link,
[  --enable-static-link    Link everything statically],
STATIC_VAL=$enableval, STATIC_VAL="no")
if test $STATIC_VAL = "yes"; then
  STATIC_LINK=1
else
  STATIC_VAL="no";
  STATIC_LINK=0
fi
AC_SUBST(STATIC_LINK)
AC_MSG_RESULT($STATIC_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for profile option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to add profiling information or not)
AC_ARG_ENABLE(profile,
[  --enable-profile        Add profiling information],
PROFILE_VAL=$enableval, PROFILE_VAL="no")
if test $PROFILE_VAL = "yes"; then
  PROFILE=1
else
  PROFILE_VAL="no";
  PROFILE=0
fi
AC_SUBST(PROFILE)
AC_MSG_RESULT($PROFILE_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for debug option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable debug info or not)
AC_ARG_ENABLE(debug,
[  --enable-debug          Generate debug information when compiling],
DEBUG_VAL=$enableval, DEBUG_VAL="no")
if test $DEBUG_VAL = "yes"; then
  DEBUG_INFO=1
else
  DEBUG_VAL="no";
  DEBUG_INFO=0
fi
AC_SUBST(DEBUG_INFO)
AC_MSG_RESULT($DEBUG_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for experimental code option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable experimental code or not)
AC_ARG_ENABLE(experimental,
[  --enable-experimental   Include experimental code in build],
EXPER_VAL=$enableval, EXPER_VAL="no")
if test $EXPER_VAL = "yes"; then
  EXPERIMENTAL=1
  AC_DEFINE(USE_EXPERIMENTAL)
else
  EXPER_VAL="no";
  EXPERIMENTAL=0
fi
AC_SUBST(EXPERIMENTAL)
AC_MSG_RESULT($EXPER_VAL)

dnl ---------------------------------------------------------------------------
dnl Checks for new attributes option.
dnl ---------------------------------------------------------------------------
AC_MSG_CHECKING(whether to enable new attribute model or not)
AC_ARG_ENABLE(new-attribs,
[  --disable-new-attribs   Prevent the use of the new attrib model (for experts)],
ATTRIB_VAL=$enableval, ATTRIB_VAL="yes")
if test $ATTRIB_VAL = "yes"; then
  ATTRIBUTES=1
  AC_DEFINE(NEW_ATTRIBUTES)
else
  ATTRIB_VAL="no";
  ATTRIBUTES=0
fi
AC_SUBST(ATTRIBUTES)
AC_MSG_RESULT($ATTRIB_VAL)

dnl ---------------------------------------------------------------------------
dnl This is the machine specific logic which can set some features depending
dnl on the platform.
dnl XXX Check we are really gcc

dnl The following variables may be set
dnl ARCH_MAKE_SHARED_OPTS flags tacked onto the end of building a shared
dnl     library or plugin
dnl
dnl have_so_reg flags if so_locations is used by the machine.
dnl
dnl ARCH_PROG_SETLIBPATH flags to set the library path in executables
dnl      convenient so one does not need to set LD_LIBRARY_PATH
dnl ---------------------------------------------------------------------------
case $host in

alpha-dec-osf*)
	echo "Adding shared library rules for DEC Alpha system"
	ARCH_MAKE_SHARED_OPTS="-Wl,-expect_unresolved,\*"
	ARCH_PROG_SETLIBPATH="-Wl,-rpath,\${LIB_DIR}"
	have_so_reg=yes
	;;
mips-sgi-irix6*)
	echo "Adding shared library rules for IRIX 6.* system"
	#ARCH_MAKE_SHARED_OPTS="-Wl,-expect_unresolved,\*"
	ARCH_MAKE_SHARED_OPTS=""
	ARCH_PROG_SETLIBPATH="-Wl,-rpath,\${LIB_DIR}"
	have_so_reg=yes
	;;
*)
	ARCH_MAKE_SHARED_OPTS=""
	ARCH_PROG_SETLIBPATH=""
	have_so_reg=no
	;;
esac

if test $have_so_reg = "yes"; then
  ARCH_MAKE_SHARED_OPTS="$ARCH_MAKE_SHARED_OPTS -Wl,-update_registry,\${BUILD_TOP}/so_locations"
fi

AC_SUBST(ARCH_MAKE_SHARED_OPTS)
AC_SUBST(ARCH_PROG_SETLIBPATH)
  
AC_OUTPUT(\
	Makefile \
	Makefile.vars \
	Makefile.targets \
        data/Makefile \
        data/gradient/Makefile \
        data/include/Makefile \
        data/texture/Makefile \
        doc/Makefile \
        doc/config \
	doc/pluginrc \
        doc/developers/Makefile \
        doc/users/Makefile \
        doc/api/Makefile \
        doc/api/Doxyfile \
        llapi/Makefile \
        hlapi/Makefile \
        plugins/Makefile \
        plugins/atm_object/Makefile \
        plugins/atm_object/atm_const/Makefile:Makefile.plugin.in \
        plugins/bsdf/Makefile \
        plugins/bsdf/cook_torrance/Makefile:Makefile.plugin.in \
        plugins/bsdf/lambertian/Makefile:Makefile.plugin.in \
        plugins/bsdf/phong/Makefile:Makefile.plugin.in \
        plugins/bsdf/schlick/Makefile:Makefile.plugin.in \
        plugins/bsdf/schlick_double/Makefile:Makefile.plugin.in \
        plugins/bsdf/ward/Makefile:Makefile.plugin.in \
        plugins/camera/Makefile \
        plugins/camera/parallel/Makefile:Makefile.plugin.in \
        plugins/camera/pinhole/Makefile:Makefile.plugin.in \
        plugins/camera/thinlens/Makefile:Makefile.plugin.in \
        plugins/image_filter/Makefile \
        plugins/image_filter/cartoon/Makefile:Makefile.plugin.in \
        plugins/image_filter/convert_to_grey/Makefile:Makefile.plugin.in \
        plugins/image_filter/fog/Makefile:Makefile.plugin.in \
        plugins/image_filter/lens_flare/Makefile:Makefile.plugin.in \
        plugins/image_filter/text/Makefile:Makefile.plugin.in \
        plugins/image_io/Makefile \
        plugins/image_io/gif/Makefile:Makefile.plugin.in \
        plugins/image_io/jpeg/Makefile:Makefile.plugin.in \
        plugins/image_io/png/Makefile:Makefile.plugin.in \
        plugins/image_io/tga/Makefile:Makefile.plugin.in \
        plugins/image_io/tiff/Makefile:Makefile.plugin.in \
        plugins/light/Makefile \
        plugins/light/point_light/Makefile:Makefile.plugin.in \
        plugins/light/projector/Makefile:Makefile.plugin.in \
        plugins/light/warn_light/Makefile:Makefile.plugin.in \
        plugins/pattern/Makefile \
        plugins/pattern/amplifier/Makefile:Makefile.plugin.in \
        plugins/pattern/brick/Makefile:Makefile.plugin.in \
        plugins/pattern/checker/Makefile:Makefile.plugin.in \
        plugins/pattern/composite/Makefile:Makefile.plugin.in \
        plugins/pattern/crackle/Makefile:Makefile.plugin.in \
        plugins/pattern/cylgrad/Makefile:Makefile.plugin.in \
        plugins/pattern/leopard/Makefile:Makefile.plugin.in \
        plugins/pattern/marble/Makefile:Makefile.plugin.in \
        plugins/pattern/noise/Makefile:Makefile.plugin.in \
        plugins/pattern/parquet/Makefile:Makefile.plugin.in \
        plugins/pattern/texture/Makefile:Makefile.plugin.in \
        plugins/pattern/wood/Makefile:Makefile.plugin.in \
        plugins/pattern/worley/Makefile:Makefile.plugin.in \
        plugins/perturbation/Makefile \
        plugins/perturbation/brick/Makefile:Makefile.plugin.in \
        plugins/perturbation/bump/Makefile:Makefile.plugin.in \
        plugins/perturbation/crackle/Makefile:Makefile.plugin.in \
        plugins/perturbation/leopard/Makefile:Makefile.plugin.in \
        plugins/perturbation/marble/Makefile:Makefile.plugin.in \
        plugins/perturbation/noise/Makefile:Makefile.plugin.in \
        plugins/perturbation/wave/Makefile:Makefile.plugin.in \
        plugins/perturbation/worley/Makefile:Makefile.plugin.in \
        plugins/object/Makefile \
        plugins/object/abvh/Makefile:Makefile.plugin.in \
        plugins/object/aggregate_uniform_grid/Makefile:Makefile.plugin.in \
        plugins/object/bezier/Makefile:Makefile.plugin.in \
        plugins/object/subdiv/Makefile:Makefile.plugin.in \
        plugins/object/height_field/Makefile:Makefile.plugin.in \
        plugins/object/lwo/Makefile:Makefile.plugin.in \
        plugins/object/polyhedron/Makefile:Makefile.plugin.in \
        plugins/object_filter/Makefile \
        plugins/object_filter/cartoon/Makefile:Makefile.plugin.in \
        plugins/object_filter/convert_to_grey/Makefile:Makefile.plugin.in \
        plugins/renderer/Makefile \
        plugins/renderer/raytracer/Makefile:Makefile.plugin.in \
        plugins/renderer/zbuffer/Makefile:Makefile.plugin.in \
        plugins/scene_io/Makefile \
        plugins/scene_io/rt/Makefile:Makefile.plugin.in \
        plugins/scene_io/psl/Makefile:Makefile.plugin.in \
        programs/Makefile \
        programs/render/Makefile \
        programs/rt_convert/Makefile \
	programs/barf/Makefile \
        programs/gui/Makefile \
        scenes/Makefile \
        scenes/atmospheric/Makefile \
        scenes/lights/Makefile \
        scenes/materials/Makefile \
        scenes/misc/Makefile \
        scenes/objects/Makefile
)

AC_CONFIG_LINKS(Makefile.deps:Makefile.deps)