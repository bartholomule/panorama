top_srcdir = @top_srcdir@
top_builddir = @top_builddir@
srcdir = @srcdir@
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX = @CXX@
INSTALL = @INSTALL@
LIBTOOL = @LIBTOOL@
#OBJ = @OBJ@
#LIB_PATH = @LIB_PATH@
#LIB = @LIB@
ARCH_MAKE_SHARED_OPTS = @ARCH_MAKE_SHARED_OPTS@

include @top_srcdir@/Makefile.vars
include @top_srcdir@/Makefile.rules
include @srcdir@/Makefile.data


BUILD_TOP = $(TOP_BUILDDIR)
ALL_FILES = $(strip $(wildcard $(OBJ:%.o=%.cpp)))

PLUGIN = ${PLUGIN_NAME}.so

all:		${PLUGIN}

install:
ifneq ($STATIC_LINK,1)
		@echo Installing plugin ${PLUGIN_NAME}...
		$(INSTALL) -d ${PLUGIN_DIR}
		${LIBTOOL} --mode=install ${INSTALL} ${PLUGIN} ${PLUGIN_DIR}/$(PLUGIN)
endif

${PLUGIN_NAME}.la: ${OBJ:%.o=%.lo}
		@echo Making plugin ${PLUGIN_NAME}...
#		@${CXX} -fPIC -shared -o ${PLUGIN} $^ ${LIB_PATH} ${LIB} ${ARCH_MAKE_SHARED_OPTS}
		${LIBTOOL} --mode=link ${CXX} -o $@ $^ ${LIB_PATH} ${LIB} ${ARCH_MAKE_SHARED_OPTS} -module -rpath ${PLUGIN_DIR}

ifeq ($STATIC_LINK,1)
${PLUGIN_NAME}:	${OBJ}
		@echo Adding plugin code to hlapi library
		@ar rcs ${STATIC_HLAPI_LIB} $^
		@touch ${PLUGIN}
else
${PLUGIN}: ${PLUGIN_NAME}.la
	cp -v .libs/${PLUGIN_NAME}.so $@
endif

clean: 
		rm -f ${OBJ} ${OBJ:%.o=%.lo} ${PLUGIN} ${PLUGIN_NAME}.la core *~ *.bak 
		rm -rf .libs

distclean:      clean
		rm -f Makefile *.d

