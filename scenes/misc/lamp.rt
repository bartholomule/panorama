#include "materials.inc"

/*
  This scene has the desk lamp which I have next to my computer (modeled by
  me -- Kevin Harris). 

  I started work on it on 27Aug2000.  I have done all of the lamp except for
  the curved tubes which connect the visible 'posts' to the light sockets (and 
  the light sockets/bulbs) 
  I don't know how to approach the tubes, sockets, or bulbs.
*/

define camera c
{
  translate < 0, 0, -45.000 >
  look_at   < 0, -6,  0 >
}


/*
Lamp shade:
  flat radius: 51/8 inches (outside)
  depth: 3 inches (inside)
  thickness of lip: 2/16 inch
  doing some math:
    lamp_shade_sphere_rad=9.10 inches


  knob:
    top_sphere rad: 5/32 inch 
    top_cone_top_rad: 3/32 inch
    top_cone_bot_rad: 1/4 inch
    top_cone_height: 9/32 inch
    mid_ring_rad: 3/8 inch
    mid_ring_height: 1/16 inch
    

    low_cones (2 of them attached at the skinny end): 
      total_height: 6/16 inch
      inner_mid_radius: 7/32 inch

    low_ring_rad: 9/32 inch
    low_ring_height: 1/16 inch

I'm not writing measurements for the rest of the curves, but they are in the
SDL below. 

*/

define color P_Brass1 { red 0.30 green 0.20 blue 0.10 }
define color P_Brass2 { red 0.50 green 0.35 blue 0.25 }
define color P_Brass3 { red 0.58 green 0.42 blue 0.20 }
define color P_Brass4 { red 0.65 green 0.50 blue 0.25 }
define color P_Brass5 { red 0.70 green 0.55 blue 0.40 }

define color lamp_black { red 0.001 blue 0.002 green 0.005 }
define color lamp_white { red 1.0 blue 0.95 green 0.97 }

define material lamp_flat_white
{
  bsdf : class BsdfPhong { exponent 1 }
  ambient 0.7
  diffuse 0.8
  specular 0.5
  color lamp_white
}

define material lamp_flat_black
{
  bsdf : class BsdfPhong { exponent 1 }
  ambient 0.01
  diffuse 0.1
  specular 0.0140625
  color lamp_black
}

define material lamp_brass_texture
{
  bsdf : class BsdfSchlick
  {
    reflection_color P_Brass1
    roughness 0.0125
  }
  ambient 0.25
  diffuse 0.5
  specular 0.80
}

define material light_texture
{
  bsdf : class BsdfLambertian { }
  diffuse 0.9
  emission { red 1.0 green 1.0 blue 1.0 }
  color { red 1.0 green 1.0 blue 1.0 }
}


define difference lamp_shade_curved_top
{
  intersection 
  {
    sphere {  radius 9.1342 translate <0,-6.0092,0> }
    box    {  point1 <-9.200,0,-9.200> point2 <9.200,3.200,9.200>}
    material : extends lamp_flat_black { }
  }
  sphere 
  { 
    radius 9.0092 translate <0,-6.0,0> 
    material : extends lamp_flat_white { }
  }
}

define union lamp_shade_knob_part 
{
  // Sphere on top
  // height above bottom of shade (to bottom of sphere): 
  // 1/16 + 6/16 + 1/16 + 9/32 + 2/16 + 3
  //             =     10/16 + 9/32 + 3
  //             =     29/32 + 3
  sphere
  {
    translate <0,4.0625,0>
    radius 0.15625
  }
  // Cone just below sphere
  // height above bottom of shade (to bottom of top_cone):
  // 1/16 + 6/16 + 1/16 + 2/16 + 3
  //      =  10/16 + 3 == 3.625
  cone
  {
    max_circle_point <0,3.625,0>
    min_circle_point <0,3.90625,0>
    max_radius 0.27
    min_radius 0.09375
  }
  // Ring just below the cone
  cone
  { 
    // This should be a cylinder, but they have problems with translations. 
    max_circle_point <0,3.5625,0>
    min_circle_point <0,3.625,0>
    max_radius 0.375
    min_radius 0.3725
  }
  // Cones below the middle ring
  cone
  {
    max_circle_point <0,3.5625,0>
    min_circle_point <0,3.3750,0>
    max_radius 0.27
    min_radius 0.21875
  }  
  cone
  {
    max_circle_point <0,3.1875,0>
    min_circle_point <0,3.3750,0>
    max_radius 0.27
    min_radius 0.21875
  }  
  // Lower ring
  cone
  { 
    // This should be a cylinder, but they have problems with translations. 
    max_circle_point <0,3.01,0>
    min_circle_point <0,3.19,0>
    max_radius 0.28125
    min_radius 0.28120
  }  
  // Portion below the shade
  // Shaft
  cone
  {
    // This should be a cylinder, but they have problems with translations. 
    min_circle_point <0,3.00000,0>
    max_circle_point <0,1.53125,0> // although it meets at 1.75
    min_radius 0.171825
    max_radius 0.171875
  }
  // nut (done as cone)
  cone
  {
    min_circle_point <0,1.84375,0>
    max_circle_point <0,1.75000,0>
    min_radius 0.265600
    max_radius 0.265625
  }
}

define union brass_light_holders 
{
  // Top of light assembly
  // Removeable cap (minus the screws)
  cone
  {
    min_circle_point <0,1.7500,0>
    max_circle_point <0,1.5000,0>
    min_radius 0.40625
    max_radius 0.75
  }
  cone
  {
    min_circle_point <0,1.5001,0>
    max_circle_point <0,1.3750,0>
    min_radius 0.75
    max_radius 1.0625
  }
  cone
  {
    min_circle_point <0,1.37510,0>
    max_circle_point <0,1.34375,0>
    min_radius 1.0625
    max_radius 1.063
  }
  cone
  {
    max_circle_point <0,1.34376,0>
    min_circle_point <0,1.1875,0>
    max_radius 1.06300
    min_radius 0.96875
  }
  // non-removeable base (under cap)
  cone
  {
    max_circle_point <0,1.1876,0>
    min_circle_point <0,0.5625,0>
    max_radius 0.96876
    min_radius 0.96874    
  }
  // The lights stick out the side of this next one (via some curved brass
  // tubes) I don't want to try that. :)
  cone
  {
    max_circle_point <0,0.4375,0>
    min_circle_point <0,0.5626,0>
    max_radius 1.00000
    min_radius 0.96875
  }
  cone
  {
    max_circle_point <0,0.4375,0>
    min_circle_point <0,0.40625,0>
    max_radius 1.0001
    min_radius 1.0000
  }
  cone
  {
    max_circle_point <0,0.40626,0>
    min_circle_point <0,0.34375,0>
    max_radius 1.00001
    min_radius 0.75000
  }
  cone
  {
    max_circle_point <0,0.34376,0>
    min_circle_point <0,0.125,0>
    max_radius 0.75000
    min_radius 0.31250
  }
  cone
  {
    min_circle_point <0,0.1251,0>
    max_circle_point <0,0.0000,0>
    min_radius 0.296875
    max_radius 0.29689
  }
  // The two sides where the brass tubes hang out
  cone
  {
    max_circle_point <-1.125,0.8125,0>
    min_circle_point < 1.125,0.8125,0>
    max_radius 0.2501
    min_radius 0.2500
  }
  cone
  {
    max_circle_point <-2.5,0.8125,0>
    min_circle_point < 2.5,0.8125,0>
    max_radius 0.18751
    min_radius 0.18750
  }
  // The curve should be completed (or approximated) here...  
}

define union upper_brass_shaft
{
  // skinny shaft along the length (there is stuff on the outside)
  cone
  {
    min_circle_point <0,0.0001,0>
    max_circle_point <0,-3.5,0>
    min_radius 0.296875
    max_radius 0.29689
  }  

  cone
  {
    min_circle_point <0, 0.0001,0>
    max_circle_point <0,-0.1251,0>
    min_radius 0.296875
    max_radius 0.484375
  }
  cone
  {
    max_circle_point <0,-0.1250,0>
    min_circle_point <0,-0.1875,0>
    min_radius 0.296875
    max_radius 0.484375
  }

  // longer curve
  cone
  {
    min_circle_point <0,-0.6874,0>
    max_circle_point <0,-1.0625,0>    
    min_radius 0.296874
    max_radius 0.421875
  }
  cone
  {
    min_circle_point <0,-1.0624,0>    
    max_circle_point <0,-1.2500,0>    
    min_radius 0.421875
    max_radius 0.484375
  }
  cone
  {
    max_circle_point <0,-1.2500,0>    
    min_circle_point <0,-1.4375,0>    
    max_radius 0.484375
    min_radius 0.296875
  }
  // gap
 
  // curve
  cone
  {
    min_circle_point <0,-1.5625, 0>
    max_circle_point <0,-1.78125,0>
    min_radius 0.296875
    max_radius 0.40625
  }
  cone
  {
    min_circle_point <0,-1.78125, 0>
    max_circle_point <0,-1.8125,0>
    min_radius 0.40625
    max_radius 0.43750
  }
  cone
  {
    min_circle_point <0,-1.8125,0>
    max_circle_point <0,-2.11875,0>
    min_radius 0.525000
    max_radius 0.8753125
  }
  cone
  {
    min_circle_point <0,-2.11875,0>
    max_circle_point <0,-2.24375,0>
    min_radius 0.853125
    max_radius 0.940625
  }
  cone
  {
    min_circle_point <0,-2.24375,0>
    max_circle_point <0,-2.36875,0>
    min_radius 0.940625
    max_radius 0.940725
  }
  cone
  {
    min_circle_point <0,-2.36875,0>
    max_circle_point <0,-2.80000,0>
    min_radius 0.940725
    max_radius 1.1375
  }
  // glass gap
  // center of glass sphere: <0,-2.9,0>
  // height of glass gap: 0.2
  // radius of glass: 1.84375
  
  cone
  {
    max_circle_point <0,-3.0000,0>    
    min_circle_point <0,-3.4625,0>    
    max_radius 1.2
    min_radius 1.03125
  }
  cone
  {
    max_circle_point <0,-3.4625,0>    
    min_circle_point <0,-3.6000,0>    
    max_radius 1.03125
    min_radius 1.00000
  }

  // black tube is below...
  // radius: 1
  // height: 7.6875

}

define cone black_tube
{
  min_circle_point <0,-3.6,0>
  max_circle_point <0,-11.3,0>
  min_radius 0.999
  max_radius 1.000
}

define difference lamp_base
{
  union
  {
    cone 
    {
      min_circle_point <0,-11.875,0>
      max_circle_point <0,-12.250,0>
      min_radius 2.875
      max_radius 3.150
    }
    cone 
    {
      min_circle_point <0,-12.25,0>
      max_circle_point <0,-12.75,0>
      min_radius 3.150
      max_radius 3.250
    }
    cone 
    {
      min_circle_point <0,-12.75,0>
      max_circle_point <0,-13.25,0>
      min_radius 3.250
      max_radius 3.400
    }
    cone 
    {
      min_circle_point <0,-13.25,0>
      max_circle_point <0,-13.69,0>
      min_radius 3.4
      max_radius 3.5
    }
    cone 
    {
      min_circle_point <0,-13.69,0>
      max_circle_point <0,-13.70,0>
      min_radius 3.5
      max_radius 3.5625
    }
    cone 
    {
      min_circle_point <0,-13.70,0>
      max_circle_point <0,-13.75,0>
      min_radius 3.5625
      max_radius 3.5626
    }
  }
  cone 
  {
    max_circle_point <0,-11.870,0>
    max_circle_point <0,-12.000,0>
    min_radius 2.9000
    max_radius 3.0875
  }
}

define union low_brass_piece
{
  cone 
  {
    min_circle_point <0,-11.299,0>
    max_circle_point <0,-11.435,0>
    min_radius 1.0
    max_radius 1.0625  
  }
  cone 
  {
    min_circle_point <0,-11.4340,0>
    max_circle_point <0,-11.4975,0>
    min_radius 1.0625
    max_radius 1.0626  
  }
  cone
  {
    min_circle_point <0,-11.4974,0>
    max_circle_point <0,-11.8000,0>
    min_radius 1.0626
    max_radius 1.2
  }
}

define intersection glass_piece
{
  sphere 
  {
    radius 1.84375
  }
  box 
  {
    point1 <-1.85,-0.1,-1.85>
    point2 < 1.85, 0.1, 1.85>
  }
  material /* glass */
  {
    bsdf : class BsdfPhong { exponent 60 }
    ambient 0.1
    diffuse 0.1
    specular 0.1
    ior 1.52
    opacity 0.05
    caustics 20 /* copied from water.rt -- This does what? */
    color { red 0.1 green 0.35 blue 0.25 }
  }
}

define aggregate desk_lamp
{
/*
  The lamp extends from:
  (y) 4.21875 to -13.7
  (x & z) -9.1 to 9.1 (shade) -3.5626 to -3.5626 (base)
  I will translate the object to have the center of the base (bottom) at
  <0,0,0> -3.5626 and scale the object to have a height of 20 (currently
  17.91874) thus giving it a range from +/-10.15 (x&z top) and +/-3.9764 (x&z 
  base) 
*/
  difference : extends lamp_shade_curved_top { }
  union 
  {
    union : extends lamp_shade_knob_part { }
    union : extends brass_light_holders  { }
    union : extends upper_brass_shaft    { }
    union : extends low_brass_piece      { }
    material: extends lamp_brass_texture { color P_Brass1  }
  }
  aggregate
  {
    cone : extends black_tube { }
    difference : extends lamp_base { }
    material: extends lamp_flat_black { }
  }
  intersection : extends glass_piece { translate <0,-2.9,0>  }
  intersection : extends glass_piece { translate <0,-11.9,0> }

  // These are pretty sad looking light bulbs, but they show their purpose.
  sphere
  {
    radius 1
    translate <-3.5,0.8125,0>
    material : extends light_texture { }
  }
  sphere
  {
    radius 1
    translate < 3.5,0.8125,0>
    material : extends light_texture { }
  }
/*
  // Equiv point lights
  light { translate <-3.5,0.8125,0> color CWhite }
  light { translate < 3.5,0.8125,0> color CWhite }
*/
  translate <0,13.7,0>
  scale <1.1161493,1.1161493,1.1161493>
}

aggregate: extends desk_lamp
{
  // Since the lamp was defined entirely with spheres, boxes, and cones, it
  // acts correctly with translates.  This is NOT the case with cylinders.
  rotate <0,-45,0.1>
  scale <0.75,0.75,0.75>
  translate <-8,-8,0>
}

aggregate: extends desk_lamp
{
  rotate <0,45,-0.1>
  translate <8,-8,0>
}

sphere
{
  radius 2
  translate <0,-6,-22>
  material : extends MPlastic
  {
    color CRed
  }
}


torus
{
  radius_a 3
  radius_b 1
  translate <1.5,-2,-10>
  rotate <45,45,0>
  material : extends MPlastic
  {
    color CBlue
  }
}


// This plane causes an exception:
// TVector3D <-1.00012, 0.629176, 9.20002>
// render: box.cpp:55: class TVector TBox::localNormal(const class TVector &)
// const: Assertion `false' failed. 
/*
plane 
{ 
  translate <-40,0,0> 
  normal <1,0,0> 
  material: extends MPlastic { color CDarkWood } 
}
// This plane works fine.
plane 
{ 
  translate <40,0,0>
  normal <-1,0,0> 
  material: extends MPlastic { color CDarkWood } 
}
*/

//plane 
sphere
{
  translate <0,-100008,0>
  radius 100000
//  translate <0,-8,0>
//  normal <0.1,1,-0.1>
  material
  {
    bsdf : class BsdfPhong
    {
      exponent 50
    }
//    ambient	0.2
    ambient	0
    diffuse	0.6
    specular	0.25

    color : class PatternMarble
    {
      color { red 0.7 green 0.3 blue 0.2 }
      base_color { red 0.2 green 0.3 blue 0.5 }
    }
  }
}




define color my_sky
{
  red 0.0
  blue 0.1
  green 0.05
}

scene
{
  camera	c
  width		400
  height	400

  background    my_sky
  output
  {
    type        "png"
    name	"lamp.png"
  }
  renderer : class Raytracer 
  {
    aa_depth 8
    max_diff 0.01
    depth 10
    sampling "stochastic"
//  sampling "adaptive"
  }
}


