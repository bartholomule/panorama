/*
*  Atmosphere test
*/

#include "materials.inc"

define camera c
{
  translate	<0, 0, 450>
  look_at	<0, 0, 0>
}

define light l_ambient
{
  translate	<200, 200, 200>
  volumetric    off
  shadow        off
}

define light l
{
  translate	<0, 200, 0>
//  falloff       <0.00005, 0.00005, 1>
  axis          <0, 0, 0>
  angle_th      20
  intensity     1
}

define light lp : class Projector
{
  translate	<0, 200, 0>
  point_at	<0, 0, 0>
  up            <0, 0, -1>
  angle         40
  texture	"f16.tga"
  intensity     1
}

define light lw : class WarnLight
{
  translate	<0, 200, 0>
  point_at	<0, 0, 0>
  exponent      20
//  axis          <0, 0, 0>
//  angle_th      20
  intensity     1
}

sphere
{
  translate     <0, 0, 0>
  radius        40
  material : extends MLambertian
  {
    color       CRed
  }
}

plane
{
  translate	<0, -100, 0>
  normal	<0, 1, 0>
  material : extends MChecker
  {
    color : class PatternChecker
    {
      color	CCyan
      size        50
    }
  }
}

/*
plane
{
  translate	<0, 0, -100>
  normal	<0, 0, 1>
  material : extends MChecker
  {
    color	CWhite
    base_color  CBlue
    size        50
    specular    0
    diffuse     0.8
  }
}
*/

atm_object : class AtmConst
{
  from          <-200, -200, -200>
  to            <200, 200, 200>
  albedo        0.004
  extinction    0.002
  jitter        0
  samples       20
  min_step_size 1
  transp_th     0.01
  slope_th      1
}

scene
{
  camera	c
//  light         l_ambient
  light         l
//  light	  lp
//  light         lw
  width		400
  height	400
  background    CBlack
  participating on
  output
  {
    type        "png"
    name	"atmosphere.png"
  }
  renderer : class Raytracer {}
}
