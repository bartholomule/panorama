
%.o: %.cpp
		@echo Compiling $<...
		${CXX} -c ${CXXFLAGS} $< -o $@
%.cpp: %.l
		@echo Generating scanner...
		${LEX} ${LEXFLAGS} $< > $@

%.cpp: %.y
		@echo Generating parser...
		@${YACC} ${BISONFLAGS} -do $(basename $@).c -S lalr1.cc -o $@ $<

# This here was the old method, from back when bison supported the
# 'bison.simple' interface. As of now, bison 1.7 and above (which I've tried)
# do not support it.
#		BISON_SIMPLE=${BUILD_TOP}/bison.simple ${YACC} ${BISONFLAGS} -do $(basename $@).c -S ${PWD}/${BUILD_TOP}/bison.simple $<
#		mv $(basename $@).c $@

# Rules for generating dependency files
%.d: %.cpp
	@echo "Making dependency file for $<"                              ;\
        $(CXX) -c $(CXXFLAGS) -MMD $(FLAGS) -E $(@:%.d=%.cpp) -o $@ > /dev/null ;\
        cat $@ | sed -e 's/:/ $(@:%.d=%.o) $@:/g' > tmp$$                               ;\
        mv -f tmp$$ $@  

