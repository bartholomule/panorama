
BUILD_TOP = ..

include ${BUILD_TOP}/Makefile.vars
include @srcdir@/${BUILD_TOP}/Makefile.rules

CXXFLAGS += -fPIC

INSTALL = @INSTALL@

VPATH = @srcdir@
SRC_DIR = @srcdir@

LIBNAME = libhlapi.so.0

OBJ = aggregate.o \
      box.o \
      circle.o \
      cone.o \
      csg.o \
      class_manager.o \
      cylinder.o \
      image_manager.o \
      mesh_object.o \
      phong_triangle.o \
      plane.o \
      plugin_manager.o \
      rectangle.o \
      scene_manager.o \
      sphere.o \
      torus.o \
      triangle.o

ALL_FILES = $(strip $(wildcard $(OBJ:%.o=%.cpp)))

all:		${HLAPI_LIB} ${STATIC_HLAPI_LIB}

install:        all
		@echo Installing hlapi lib...
		@@INSTALL@ ${HLAPI_LIB} ${LIB_DIR}/${LIBNAME}
		@rm -f ${LIB_DIR}/libhlapi.so
		@ln -s ${LIBNAME} ${LIB_DIR}/libhlapi.so
                

ifneq (@STATIC_LINK@,1)
# When doing a static link, this rule should be covered already.  This is only
# useful for shared libraries. 
${HLAPI_LIB}:	${OBJ}
		@echo Making library ${HLAPI_LIB}...
		@${CXX} -fPIC -shared ${CXXFLAGS} -Wl,-soname,${LIBNAME} -o ${HLAPI_LIB} ${OBJ} ${ARCH_MAKE_SHARED_OPTS}
endif

${STATIC_HLAPI_LIB}:    ${OBJ}
		@echo Making static library ${STATIC_HLAPI_LIB}...
		@ar rcs ${STATIC_HLAPI_LIB} ${OBJ}

clean:
		@rm -f ${OBJ} ${HLAPI_LIB} ${STATIC_HLAPI_LIB}
		@rm -f $ *~ *.bak core

distclean:      clean
		@rm -f Makefile *.d

include ${BUILD_TOP}/Makefile.deps